/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 文件名：app.js，整个应用的核心
作者：zhaohuagang@lifang.com
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
import bootstrap from "./common/bootstrap/index" ;  //加载启动项聚合模块
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载express核心模块并创建express应用程序
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
var express = require("express") ;
var app = express() ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
将阶段环境变量设置成app全局变量
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
let stageEnv = process.env.STAGE_ENV || "dev" ;
app.set("stageEnv" , stageEnv) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载系统启动项
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
bootstrap(app) ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
错误处理
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
// catch 404 and forward to error handler
app.use(function (req, res, next) {
  var err = new Error('Not Found') ;
  err.status = 404 ;
  next(err) ;
}) ;

// error handlers

// development error handler
// will print stacktrace
if (app.get('stage_env') === 'dev') {
  app.use(function (err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
      message: err.message,
      error: err
    });
  });
}

// production error handler
// no stacktraces leaked to user
app.use(function (err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
    message: err.message,
    error: {}
  });
});
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
导出
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
module.exports = app ;
